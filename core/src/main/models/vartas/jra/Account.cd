package vartas.jra;

import vartas.jra.Client.Client;
import vartas.jra.Comment.Comment;
import vartas.jra.Link.Link;
import vartas.jra.models.Account.AbstractAccount;
import vartas.jra.models.Account.AbstractSelfAccount;
import vartas.jra.models.Account.FakeAccount;
import vartas.jra.models.Account.UserList;
import vartas.jra.models.KarmaList.KarmaList;
import vartas.jra.models.Messaging.Messaging;
import vartas.jra.models.Preferences.Preferences;
import vartas.jra.models.Thing.Thing;
import vartas.jra.models.TrophyList.TrophyList;
import vartas.jra.query.QueryOne.QueryOne;
import vartas.jra.query.QueryListing.QueryListing;
import vartas.jra.query.QueryDelete.QueryDelete;
import vartas.jra.query.QueryPost.QueryPost;
import vartas.jra.query.QueryPut.QueryPut;
import vartas.jra.query.QueryPatch.QueryPatch;

public classdiagram Account {
    public abstract class Account extends AbstractAccount{
        <<ignore>>
        - Client client;
        //Users
        + abstract QueryOne<TrophyList> getTrophies();
        + abstract QueryListing<Comment> getComments();
        + abstract QueryListing<Thing> getDownvoted();
        + abstract QueryListing<Thing> getGilded();
        + abstract QueryListing<Thing> getHidden();
        + abstract QueryListing<Thing> getOverview();
        + abstract QueryListing<Thing> getSaved();
        + abstract QueryListing<Link> getSubmitted();
        + abstract QueryListing<Thing> getUpvoted();
        + abstract QueryPost<String> postBlock();
        + abstract QueryPost<String> postFriend();
        + abstract QueryPost<String> postReport();
        + abstract QueryPost<String> postSetPermission();
        + abstract QueryPost<String> postUnfriend();
        + abstract QueryDelete<Void> deleteFriends();
        + abstract QueryOne<FakeAccount> getFriends();
        + abstract QueryPut<FakeAccount> putFriends();
    }

    public abstract class SelfAccount extends AbstractSelfAccount{
            + abstract QueryOne<UserList> getBlocked();
            + abstract QueryOne<UserList> getFriends();
            + abstract QueryOne<KarmaList> getKarma();
            + abstract QueryOne<Preferences> getPreferences();
            + abstract QueryPatch<Preferences> patchPreferences();
            + abstract QueryOne<TrophyList> getTrophies();
            + abstract QueryOne<UserList> getPreferencesBlocked();
            + abstract QueryOne<UserList> getPreferencesFriends();
            + abstract QueryOne<Messaging> getPreferencesMessaging();
            + abstract QueryOne<UserList> getPreferencesTrusted();
            + abstract QueryOne<String> getMineContributor();
            + abstract QueryOne<String> getMineModerator();
            + abstract QueryOne<String> getMineStreams();
            + abstract QueryOne<String> getMineSubscriber();
    }
}