package vartas.jra;

import java.lang.String.String;
import vartas.jra.Link.Link;
import vartas.jra.Submission.Submission;
import vartas.jra.models.Thing.Thing;
import vartas.jra.models.Account.FakeAccount;
import vartas.jra.models.Account.UserList;
import vartas.jra.models.Subreddit.AbstractSubreddit;
import vartas.jra.models.Rule.Rules;
import vartas.jra.query.QueryOne.QueryOne;
import vartas.jra.query.QueryListing.QueryListing;
import vartas.jra.query.QueryPost.QueryPost;

public classdiagram Subreddit {
    public abstract class Subreddit extends AbstractSubreddit{
        //Listings
        + abstract QueryOne<Submission> getComments(String article);
        + abstract QueryListing<Link> getControversialLinks();
        + abstract QueryListing<Link> getHotLinks();
        + abstract QueryListing<Link> getNewLinks();
        + abstract QueryOne<Submission> getRandomSubmission();
        + abstract QueryListing<Link> getRisingLinks();
        + abstract QueryListing<Link> getTopLinks();
        //Search
        + abstract QueryListing<Thing> getSearch();
        //Users
        + abstract QueryPost<String> postFriend();
        + abstract QueryPost<String> postSetPermission();
        + abstract QueryPost<String> postUnfriend();
        //Subreddits
        + abstract QueryListing<FakeAccount> getBanned();
        + abstract QueryListing<FakeAccount> getContributors();
        + abstract QueryOne<UserList> getModerators();
        + abstract QueryListing<FakeAccount> getMuted();
        + abstract QueryListing<FakeAccount> getWikibanned();
        + abstract QueryListing<FakeAccount> getWikicontributors();
        + abstract QueryPost<String> postDeleteBanner();
        + abstract QueryPost<String> postDeleteHeader();
        + abstract QueryPost<String> postDeleteIcon();
        + abstract QueryPost<String> postDeleteImage();
        + abstract QueryPost<String> postStylesheet();
        + abstract QueryPost<String> postUploadImage();
        + abstract QueryOne<String> getPostRequirements();
        + abstract QueryOne<String> getSubmitText();
        + abstract QueryOne<String> getEdit();
        + abstract QueryOne<Rules> getRules();
        + abstract QueryOne<String> getTraffic();
        + abstract QueryOne<String> getSidebar();
        + abstract QueryOne<Submission> getSticky();
    }
}